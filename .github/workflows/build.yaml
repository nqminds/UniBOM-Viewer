name: Lint and test

on: [push, pull_request]

jobs:
  lint-build-and-test:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      # Clone the sbom-cli repository
      - name: Clone sbom-cli repository
        run: |
          git clone https://github.com/nqminds/sbom-cli.git
          cd sbom-cli
          git checkout -b ${{ env.BRANCH_NAME }}

      # Copy the changes from cyber repository
      - name: Copy changes to sbom-cli
        run: |
          cp -r ./packages/vulnerability-analysis-tools/src/* ./sbom-cli/src/

      # Commit and push changes
      - name: Commit and push changes
        run: |
          cd sbom-cli
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add -A
          git commit -m "Update vulnerability-analysis-tools"
          git push origin ${{ env.BRANCH_NAME }}

      # Create a pull request
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          destination_branch: "main"
          pr_title: "Update vulnerability-analysis-tools"
          pr_body: "Automated PR to update vulnerability-analysis-tools"
          source_branch: ${{ env.BRANCH_NAME }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: download npm dependencies
        run: npm ci --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      - name: lint
        run: npm run lint
      - name: build dependencies
        # run dependency build scripts with exposing our private NODE_AUTH_KEY
        run: npm rebuild && npm run prepare --if-present
      - name: test
        run: npm test --if-present
        # normally this step only takes ~1 minute, but sometimes the download
        # can be slow
        timeout-minutes: 10
        env:
          # everything we're accessing is public, but authenticating allows us
          # to avoid failures due to rate-limits
          GH_TOKEN: ${{ github.token }}
      - name: Check for uncommited/unignored files
        shell: bash
        run: |
          if [ -z "$(git status --porcelain)" ]; then
            echo "No files changed"
          else
            echo "::error title=Dirty git workspace::The git workspace has uncommited files after running tests"
            # double --verbose means show `git diff` too
            git status --verbose --verbose
            exit 1
          fi
