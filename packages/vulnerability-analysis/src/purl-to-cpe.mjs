/* eslint-disable no-async-promise-executor */
import Database from "better-sqlite3";
import path from "path";
import {fileURLToPath} from "node:url";

const __filename = fileURLToPath(import.meta.url);

const __dirname = path.dirname(__filename);

export default async function convertPurlToCpe(sbomComponents) {
  const db = new Database(path.join(__dirname, "../input/purl2cpe.db"));
  const convertedComponents = await Promise.all(
    sbomComponents.map(async (compnent) => {
      return new Promise(async (resolve) => {
        const {purl, cpe} = compnent;
        if (!!purl && !cpe) {
          const componentCpe = await getCpes(db, purl);
          resolve({...compnent, cpe: componentCpe});
        } else {
          resolve(compnent);
        }
      });
    }),
  );
  db.close();
  return convertedComponents;
}

function getCpes(db, purl) {
  return new Promise((resolve, reject) => {
    const [pkg, version] = purl.split("@");
    const sql = `SELECT DISTINCT cpe from purl2cpe where purl='${pkg}' and cpe like '%${version}%'`;
    db.all(sql, [], (err, rows) => {
      if (err) {
        reject(err.message);
      }
      if (rows.length) {
        resolve(rows[0].cpe);
      }
      resolve(null);
    });
  });
}
