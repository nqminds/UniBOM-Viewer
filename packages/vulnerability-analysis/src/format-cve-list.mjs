import pluck from "lodash.pluck";
import flatten from "lodash.flatten";
import uniq from "lodash.uniq";
/**
 * @param {object[]} cves - Array of CVEs
 */

export default function formatSbomComponentList(sbomComponent) {
  const {name, version, licenses, cves} = sbomComponent;
  return {
    name,
    version,
    licenses: pluck(licenses, "license.name").join(", "),
    cves: formatCveList(cves),
  };
}

function formatCveList(cveList) {
  return cveList.map(({cve: {id, descriptions, metrics, weaknesses}}) => ({
    id,
    description: getLocaleItem(descriptions)[0],
    ...getNistScores(metrics),
    cwes: getCwes(weaknesses),
  }));
}

function getLocaleItem(list) {
  return list.reduce((iter, {lang, value}) => {
    if (lang === "en") {
      iter.push(value);
    }
    return iter;
  }, []);
}

function getNistScores(cveMetrics) {
  const metric = cveMetrics.cvssMetricV31 ?? cveMetrics.cvssMetricV2;
  const nistMetric =
    metric.find(({source}) => source.includes("nist")) || metric[0];

  return nistMetric.cvssData;
}

function getCwes(cveWeaknesses) {
  return uniq(getLocaleItem(flatten(pluck(cveWeaknesses, "description"))));
}
