import { fileURLToPath } from "url";
import { dirname } from "path";
import path from "node:path";
import fs from "fs";

/**
 * Parses the text vulerability report generated by grype
 *
 *@example
 *getVulnerabilities('../input/reports/vulnerability_report_nodeproject');
 *
 *@param {string} filePath - Path to grype vulnerability report file
 *@returns {object[]} - Returns an Array of objects
 */
export function getVulnerabilities(filePath) {
  const __filename = fileURLToPath(import.meta.url);
  const __dirname = dirname(__filename);

  const vulnFile = path.resolve(__dirname, filePath);
  const data = fs.readFileSync(vulnFile, "utf-8");
  const lines = data.split("\n").slice(1);

  const vulnerabilities = lines
    .map((line) => {
      // TODO: find a beter solution to account for missing fields in the text file
      const parts = line.split(/\s{2,}/);
      if (parts.length === 6) {
        parts.splice(2, 0, ""); // insert an empty string at index 2
      }
      const [name, installed, fixedIn, type, vulnerability, severity] = parts;

      return {
        name,
        installed,
        fixedIn,
        type,
        vulnerability,
        severity,
      };
    })
    .filter((vul) => vul.name); // remove undefined entries

  return vulnerabilities;
}
