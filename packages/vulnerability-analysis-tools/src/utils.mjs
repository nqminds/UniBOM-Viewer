/* eslint-disable no-console */
import semver from "semver";

/**
 * Determines whether a CPE is a previous version
 *
 * @param {string} currentCpe - The current CPE
 * @param {string} cpeToCheck - CPE to check if it is a previous version
 * @returns {boolean} cpeToCheck is a previous version
 */
export function previousCpeVersion(currentCpe, cpeToCheck) {
  return semver.lte(getVersion(cpeToCheck), getVersion(currentCpe));
}

/**
 * Attempts to extract the version for a given CPE.
 * If no version is found, it returns "0.0.0"
 *
 * @param {string} cpe - CPE of which you want the version
 * @returns {string} Version number
 */
export function getVersion(cpe) {
  // Remove CPE version:
  const withoutCpeVersion = cpe.replace(/^cpe:[0-9]+(\.[0-9]+)+:/, "");

  // Define the regular expression pattern
  // Should match any version number (including 1.2.3-alpha, 1.2.3+build 1.2.3a)
  const regex = /:\b\d+(?:\.\d+){0,3}(?:-\w+)?(?:\+\w+)?(.)?\b/;
  try {
    const stringVersion = regex.exec(withoutCpeVersion);
    // Remove ":" at the begining
    const version = stringVersion[0].substring(1);
    const returnValue = semver.valid(semver.coerce(version));
    return returnValue || "0.0.0";
  } catch {
    return "0.0.0";
  }
}
