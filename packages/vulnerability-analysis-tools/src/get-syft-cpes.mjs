import { fileURLToPath } from "url";
import fs from "fs";
import path from "node:path";
import { dirname } from "path";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

function cleanCpe(cpe) {
  // Handle the cpe:/a:... format
  if (cpe.startsWith("cpe:/")) {
    const cpe_2_3 = cpe.replace("cpe:/a:", "cpe:2.3:a:");
    const parts = cpe_2_3.split(":");
    if (parts.length >= 6) {
      return `${parts[1]}:${parts[2]}:${parts[3]}:${parts[4]}:${parts[5]}:*:*:*:*:*:*`;
    }
    return cpe; // if it doesn't match the expected pattern, return the original
  }

  // Handle the cpe:2.3:a:... format
  else if (cpe.startsWith("cpe:2.3:")) {
    const parts = cpe.split("\\/");
    if (parts.length > 1) {
      const lastPart = parts[parts.length - 1];
      const subParts = lastPart.split(":");
      return `cpe:2.3:a:${subParts[0]}:${subParts.slice(0).join(":")}`.split(
        "_"
      )[0];
    }
    return cpe; // if it doesn't match the expected pattern, return the original
  }

  return cpe; // return the original for any other format
}

/**
 * Extracts CPE values from components.
 *
 * @example
 * getCpes("../input/cyberxbom.json");
 *
 * @param {string} filePath - Path to the SBOM JSON file.
 * @returns {string[]} - Array of CPE strings.
 */
export async function getCpes(filePath) {
  // Read the CycloneDx SBOM JSON file
  const sbomData = fs.readFileSync(path.resolve(__dirname, filePath));
  const sbomJson = JSON.parse(sbomData);

  const listOfCpes = [];

  // extract CPE values from components
  sbomJson.components.forEach((component) => {
    if (component.cpe) {
      const cleanedCpe = cleanCpe(component.cpe);
      listOfCpes.push(cleanedCpe);
    }
  });
  return listOfCpes;
}
