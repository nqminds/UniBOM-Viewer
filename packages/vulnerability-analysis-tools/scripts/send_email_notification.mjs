/* eslint-disable no-console */
import dotenv from "dotenv";
import pm2 from "pm2";
import { createTransport } from "nodemailer";
import path from "path";
import { dirname } from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
dotenv.config({ path: path.resolve(__dirname, "../../../.env") });

async function sendEmail() {
  const transporter = createTransport({
    host: process.env.HOST,
    port: process.env.EMAIL_SERVER_PORT,
    secure: false,
    auth: {
      user: process.env.LIVEMAIL_USER,
      pass: process.env.SUPPORT_PASSWORD,
    },
  });

  const mailOptions = {
    from: process.env.LIVEMAIL_USER,
    to: "ionut@nquiringminds.com",
    subject: "cyber app",
    text: "The Cyber application has either restarted or is currently experiencing downtime.\nDo Not Reply",
  };

  // Send the email
  try {
    const info = await transporter.sendMail(mailOptions);
    console.log("Email sent:", info.response);
  } catch (error) {
    console.error("Error sending email:", error);
  }
}

// Connect to PM2
pm2.connect((err) => {
  if (err) {
    console.error("Error connecting to PM2:", err);
    process.exit(1);
  }

  pm2.list((error, processList) => {
    if (error) {
      console.error("Error listing PM2 processes:", error);
      process.exit(2);
    }

    // Find the process named 'cyber'
    const cyberProcess = processList.find((proc) => proc.name === "cyber");
    if (!cyberProcess) {
      console.error('No process named "cyber" found');
      process.exit(3);
    }

    const targetPID = cyberProcess.pid;

    // Connect to PM2 bus
    pm2.launchBus((busError, bus) => {
      if (busError) {
        console.error("Error launching PM2 bus:", busError);
        process.exit(4);
      }

      // Listen for process events
      bus.on("process:event", (data) => {
        if (
          (data.event === "restart" || data.event === "exit") &&
          data.process.pid === targetPID
        ) {
          console.log(
            `App ${data.process.name} with PID ${data.process.pid} has ${data.event}`
          );
          sendEmail();
        } else {
          console.log("No email sent, process data:", data.process.name);
        }
      });
    });
  });
});
