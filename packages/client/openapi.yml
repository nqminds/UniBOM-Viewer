openapi: "3.0.0"
info:
  title: Cyber Demonstrator Server
  description: |
    An OpenAPI spec of the @nqminds/cyber-demonstrator-server API
  contact:
    name: "NquiringMinds"
    email: "info@nquiringminds.com"
    url: "https://nquiringminds.com/contact/"
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Development Server
paths:
  /run-script/{purecap}/{goodCert}:
    get:
      operationId: runScript
      summary: Returns standard input / output / errors when running open-ssl vulnerability scripts on various servers
      parameters:
        - in: path
          name: purecap
          schema:
            type: boolean
          required: true
          description: |
            Boolean flag to test server with morello architecture.

            If:
              - `true`, a request is sent to a morello server.
              - `false`, a request is sent to a ubuntu server.
        - in: path
          name: goodCert
          schema:
            type: boolean
          required: true
          description: |
            Boolean flag to test server with a "good" certificate.

            If:
              - `true`, this is a malicious certificate that attempts to exploit
            [CVE-2022-3602](https://nvd.nist.gov/vuln/detail/CVE-2022-3602).
              - `false`, this is a non-malicious certificate.
      responses:
        "200":
          description: open-ssl script executed successfully and the response has been returned
          content:
            application/json:
              example:
                stdin: "openssl, server, -accept, 12345"
                stdout: "some\n output"
                stderr: ""
              schema:
                type: object
                required:
                  - "stdin"
                  - "stdout"
                  - "stderr"
                properties:
                  stdin:
                    type: string
                    description: |
                      Comma separated Args for the command, **not standard input**.
                  stdout:
                    type: string
                    description: standard output
                  stderr:
                    type: string
                    description: standard error
        "500":
          description: Internal Server Error
        "501":
          description: Config is not implemented
        "503":
          description: |
            Morello Server backend is still in the process of setting up
            (usually takes 5-10 minutes to setup).

            Please try again after a couple of seconds.
  /vulnerability-analysis:
    get:
      operationId: vulnerabilityAnalysis
      summary: Gets a list of all CVEs for the SBOM.
      description: |
        The first time this function is called will be a bit slow, since
        we need to download data from the NIST NVD database.
      responses:
        "200":
          description: |
            List of SBOM components and CVEs.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SbomComponent"

components:
  schemas:
    SbomComponent:
      title: "SbomComponent"
      type: object
      required:
        - name
        - version
        - licenses
        - cves
      properties:
        name:
          $ref: https://raw.githubusercontent.com/CycloneDX/specification/1.4/schema/bom-1.4.schema.json#/definitions/component/properties/name
        version:
          $ref: https://raw.githubusercontent.com/CycloneDX/specification/1.4/schema/bom-1.4.schema.json#/definitions/component/properties/version
        licenses:
          type: string
        cves:
          type: array
          items:
            $ref: "#/components/schemas/CVE"
    CVE:
      title: "CVE"
      description: |
        CVE object with inlined CVSS data (either CVSS v2.0 or CVSS v3.1)
      oneOf:
        - $ref: "#/components/schemas/CVE_with_CVSSv20"
        - $ref: "#/components/schemas/CVE_with_CVSSv31"
      discriminator:
        # looking at the tells you whether you have CVSS v2.0 or CVSS 3.1 data
        propertyName: "version"
        mapping:
          "2.0": "#/components/schemas/CVE_with_CVSSv20"
          "3.1": "#/components/schemas/CVE_with_CVSSv31"

    BaseCVE:
      title: "BaseCVE"
      description: |
        Base CVE object that does not have any CVSS data.
      type: object
      required:
        # id is optional
        - description
        - cwes
      properties:
        id:
          # official URL is https://csrc.nist.gov/schema/nvd/api/2.0/cve_api_json_2.0.schema, but this public GitHub mirrfor has better CORs support
          $ref: https://raw.githubusercontent.com/jeremylong/Open-Vulnerability-Project/c62debe6bb1fa631efa349383ffba2e1c2034fff/open-vulnerability-clients/src/main/resources/json/cve_api_json_2.0.schema#/definitions/cve_id
        name:
          type: string
        description:
          type: string
        cwes:
          type: array
          items:
            title: CWE
            type: object
            required:
              - name
              - memoryCwe
            properties:
              name:
                type: string
              memoryCwe:
                type: boolean
                description: |
                  True if this CWE might be mitigated by Morello Purecap.

    CVE_with_CVSSv31:
      title: "CVE_with_CVSSv31"
      description: |
        CVE object that contains CVSS v3.1 data
      allOf:
        - $ref: "#/components/schemas/BaseCVE"
        - $ref: "#/components/schemas/CVSSv31"

    CVE_with_CVSSv20:
      title: "CVE_with_CVSSv20"
      description: |
        CVE object that contains CVSS v2.0 data
      allOf:
        - $ref: "#/components/schemas/BaseCVE"
        - $ref: "#/components/schemas/CVSSv20"

    CVSSv31: {
        "license":
          [
            "Copyright (c) 2021, FIRST.ORG, INC.",
            "All rights reserved.",
            "",
            "Redistribution and use in source and binary forms, with or without modification, are permitted provided that the ",
            "following conditions are met:",
            "1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following ",
            "   disclaimer.",
            "2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the ",
            "   following disclaimer in the documentation and/or other materials provided with the distribution.",
            "3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote ",
            "   products derived from this software without specific prior written permission.",
            "",
            "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, ",
            "INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE ",
            "DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ",
            "SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR ",
            "SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, ",
            "WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ",
            "OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
          ],
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "JSON Schema for Common Vulnerability Scoring System version 3.1",
        # This file was taken from https://www.first.org/cvss/cvss-v3.1.json?20210501
        # and slightly modified to work as an embedded JSON Schema
        "id": "https://www.first.org/cvss/cvss-v3.1.json?20210501",
        "type": "object",
        "definitions":
          {
            "attackVectorType":
              {
                "type": "string",
                "enum": ["NETWORK", "ADJACENT_NETWORK", "LOCAL", "PHYSICAL"],
              },
            "modifiedAttackVectorType":
              {
                "type": "string",
                "enum":
                  [
                    "NETWORK",
                    "ADJACENT_NETWORK",
                    "LOCAL",
                    "PHYSICAL",
                    "NOT_DEFINED",
                  ],
              },
            "attackComplexityType":
              { "type": "string", "enum": ["HIGH", "LOW"] },
            "modifiedAttackComplexityType":
              { "type": "string", "enum": ["HIGH", "LOW", "NOT_DEFINED"] },
            "privilegesRequiredType":
              { "type": "string", "enum": ["HIGH", "LOW", "NONE"] },
            "modifiedPrivilegesRequiredType":
              {
                "type": "string",
                "enum": ["HIGH", "LOW", "NONE", "NOT_DEFINED"],
              },
            "userInteractionType":
              { "type": "string", "enum": ["NONE", "REQUIRED"] },
            "modifiedUserInteractionType":
              { "type": "string", "enum": ["NONE", "REQUIRED", "NOT_DEFINED"] },
            "scopeType": { "type": "string", "enum": ["UNCHANGED", "CHANGED"] },
            "modifiedScopeType":
              {
                "type": "string",
                "enum": ["UNCHANGED", "CHANGED", "NOT_DEFINED"],
              },
            "ciaType":
              &ciaType { "type": "string", "enum": ["NONE", "LOW", "HIGH"] },
            "modifiedCiaType":
              &modifiedCiaType {
                "type": "string",
                "enum": ["NONE", "LOW", "HIGH", "NOT_DEFINED"],
              },
            "exploitCodeMaturityType":
              {
                "type": "string",
                "enum":
                  [
                    "UNPROVEN",
                    "PROOF_OF_CONCEPT",
                    "FUNCTIONAL",
                    "HIGH",
                    "NOT_DEFINED",
                  ],
              },
            "remediationLevelType":
              {
                "type": "string",
                "enum":
                  [
                    "OFFICIAL_FIX",
                    "TEMPORARY_FIX",
                    "WORKAROUND",
                    "UNAVAILABLE",
                    "NOT_DEFINED",
                  ],
              },
            "confidenceType":
              {
                "type": "string",
                "enum": ["UNKNOWN", "REASONABLE", "CONFIRMED", "NOT_DEFINED"],
              },
            "ciaRequirementType":
              &ciaRequirementType {
                "type": "string",
                "enum": ["LOW", "MEDIUM", "HIGH", "NOT_DEFINED"],
              },
            "scoreType":
              &scoreType { "type": "number", "minimum": 0, "maximum": 10 },
            "severityType":
              &severityType {
                "type": "string",
                "enum": ["NONE", "LOW", "MEDIUM", "HIGH", "CRITICAL"],
              },
          },
        "properties": {
            "version":
              {
                "description": "CVSS Version",
                "type": "string",
                "enum": ["3.1"],
              },
            "vectorString":
              {
                "type": "string",
                "pattern": "^CVSS:3[.]1/((AV:[NALP]|AC:[LH]|PR:[NLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]|E:[XUPFH]|RL:[XOTWU]|RC:[XURC]|[CIA]R:[XLMH]|MAV:[XNALP]|MAC:[XLH]|MPR:[XNLH]|MUI:[XNR]|MS:[XUC]|M[CIA]:[XNLH])/)*(AV:[NALP]|AC:[LH]|PR:[NLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]|E:[XUPFH]|RL:[XOTWU]|RC:[XURC]|[CIA]R:[XLMH]|MAV:[XNALP]|MAC:[XLH]|MPR:[XNLH]|MUI:[XNR]|MS:[XUC]|M[CIA]:[XNLH])$",
              },
            "attackVector":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/attackVectorType",
              },
            "attackComplexity":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/attackComplexityType",
              },
            "privilegesRequired":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/privilegesRequiredType",
              },
            "userInteraction":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/userInteractionType",
              },
            "scope":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/scopeType",
              },
            "confidentialityImpact":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/ciaType",
              },
            "integrityImpact": *ciaType, # workaround for openapi-typescript-codegen
            "availabilityImpact": *ciaType, # workaround for openapi-typescript-codegen
            "baseScore":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/scoreType",
              },
            "baseSeverity":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/severityType",
              },
            "exploitCodeMaturity":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/exploitCodeMaturityType",
              },
            "remediationLevel":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/remediationLevelType",
              },
            "reportConfidence":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/confidenceType",
              },
            "temporalScore": *scoreType, # workaround for openapi-typescript-codegen
            "temporalSeverity": *severityType, # workaround for openapi-typescript-codegen
            "confidentialityRequirement":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/ciaRequirementType",
              },
            "integrityRequirement": *ciaRequirementType, # workaround for openapi-typescript-codegen
            "availabilityRequirement": *ciaRequirementType, # workaround for openapi-typescript-codegen
            "modifiedAttackVector":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/modifiedAttackVectorType",
              },
            "modifiedAttackComplexity":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/modifiedAttackComplexityType",
              },
            "modifiedPrivilegesRequired":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/modifiedPrivilegesRequiredType",
              },
            "modifiedUserInteraction":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/modifiedUserInteractionType",
              },
            "modifiedScope":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/modifiedScopeType",
              },
            "modifiedConfidentialityImpact":
              {
                "$ref": "https://www.first.org/cvss/cvss-v3.1.json?20210501#/definitions/modifiedCiaType",
              },
            "modifiedIntegrityImpact": *modifiedCiaType, # workaround for openapi-typescript-codegen
            "modifiedAvailabilityImpact": *modifiedCiaType, # workaround for openapi-typescript-codegen
            "environmentalScore": *scoreType, # workaround for openapi-typescript-codegen
            "environmentalSeverity": *severityType, # workaround for openapi-typescript-codegen
          },
        "required": ["version", "vectorString", "baseScore", "baseSeverity"],
      }

    CVSSv20: {
        "license":
          [
            "Copyright (c) 2017, FIRST.ORG, INC.",
            "All rights reserved.",
            "",
            "Redistribution and use in source and binary forms, with or without modification, are permitted provided that the ",
            "following conditions are met:",
            "1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following ",
            "   disclaimer.",
            "2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the ",
            "   following disclaimer in the documentation and/or other materials provided with the distribution.",
            "3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote ",
            "   products derived from this software without specific prior written permission.",
            "",
            "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, ",
            "INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE ",
            "DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ",
            "SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR ",
            "SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, ",
            "WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ",
            "OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
          ],

        "$schema": "http://json-schema.org/draft-04/schema#",
        "title": "JSON Schema for Common Vulnerability Scoring System version 2.0",
        # This file was taken from https://www.first.org/cvss/cvss-v2.0.json?20170531
        # and slightly modified to work as an embedded JSON Schema
        "id": "https://www.first.org/cvss/cvss-v2.0.json?20170531",
        "type": "object",
        "definitions":
          {
            "accessVectorType":
              {
                "type": "string",
                "enum": ["NETWORK", "ADJACENT_NETWORK", "LOCAL"],
              },
            "accessComplexityType":
              { "type": "string", "enum": ["HIGH", "MEDIUM", "LOW"] },
            "authenticationType":
              { "type": "string", "enum": ["MULTIPLE", "SINGLE", "NONE"] },
            "ciaType":
              &cvss20ciaType {
                "type": "string",
                "enum": ["NONE", "PARTIAL", "COMPLETE"],
              },
            "exploitabilityType":
              {
                "type": "string",
                "enum":
                  [
                    "UNPROVEN",
                    "PROOF_OF_CONCEPT",
                    "FUNCTIONAL",
                    "HIGH",
                    "NOT_DEFINED",
                  ],
              },
            "remediationLevelType":
              {
                "type": "string",
                "enum":
                  [
                    "OFFICIAL_FIX",
                    "TEMPORARY_FIX",
                    "WORKAROUND",
                    "UNAVAILABLE",
                    "NOT_DEFINED",
                  ],
              },
            "reportConfidenceType":
              {
                "type": "string",
                "enum":
                  ["UNCONFIRMED", "UNCORROBORATED", "CONFIRMED", "NOT_DEFINED"],
              },
            "collateralDamagePotentialType":
              {
                "type": "string",
                "enum":
                  [
                    "NONE",
                    "LOW",
                    "LOW_MEDIUM",
                    "MEDIUM_HIGH",
                    "HIGH",
                    "NOT_DEFINED",
                  ],
              },
            "targetDistributionType":
              {
                "type": "string",
                "enum": ["NONE", "LOW", "MEDIUM", "HIGH", "NOT_DEFINED"],
              },
            "ciaRequirementType":
              &cvss20ciaRequirementType {
                "type": "string",
                "enum": ["LOW", "MEDIUM", "HIGH", "NOT_DEFINED"],
              },
            "scoreType":
              &cvss20scoreType {
                "type": "number",
                "minimum": 0,
                "maximum": 10,
              },
          },
        "properties": {
            "version":
              {
                "description": "CVSS Version",
                "type": "string",
                "enum": ["2.0"],
              },
            "vectorString":
              {
                "type": "string",
                "pattern": "^((AV:[NAL]|AC:[LMH]|Au:[MSN]|[CIA]:[NPC]|E:(U|POC|F|H|ND)|RL:(OF|TF|W|U|ND)|RC:(UC|UR|C|ND)|CDP:(N|L|LM|MH|H|ND)|TD:(N|L|M|H|ND)|[CIA]R:(L|M|H|ND))/)*(AV:[NAL]|AC:[LMH]|Au:[MSN]|[CIA]:[NPC]|E:(U|POC|F|H|ND)|RL:(OF|TF|W|U|ND)|RC:(UC|UR|C|ND)|CDP:(N|L|LM|MH|H|ND)|TD:(N|L|M|H|ND)|[CIA]R:(L|M|H|ND))$",
              },
            "accessVector":
              {
                "$ref": "https://www.first.org/cvss/cvss-v2.0.json?20170531#/definitions/accessVectorType",
              },
            "accessComplexity":
              {
                "$ref": "https://www.first.org/cvss/cvss-v2.0.json?20170531#/definitions/accessComplexityType",
              },
            "authentication":
              {
                "$ref": "https://www.first.org/cvss/cvss-v2.0.json?20170531#/definitions/authenticationType",
              },
            "confidentialityImpact":
              {
                "$ref": "https://www.first.org/cvss/cvss-v2.0.json?20170531#/definitions/ciaType",
              },
            "integrityImpact": *cvss20ciaType, # workaround for openapi-typescript-codegen
            "baseScore":
              {
                "$ref": "https://www.first.org/cvss/cvss-v2.0.json?20170531#/definitions/scoreType",
              },
            "exploitability":
              {
                "$ref": "https://www.first.org/cvss/cvss-v2.0.json?20170531#/definitions/exploitabilityType",
              },
            "remediationLevel":
              {
                "$ref": "https://www.first.org/cvss/cvss-v2.0.json?20170531#/definitions/remediationLevelType",
              },
            "reportConfidence":
              {
                "$ref": "https://www.first.org/cvss/cvss-v2.0.json?20170531#/definitions/reportConfidenceType",
              },
            "temporalScore": *cvss20scoreType, # workaround for openapi-typescript-codegen
            "collateralDamagePotential":
              {
                "$ref": "https://www.first.org/cvss/cvss-v2.0.json?20170531#/definitions/collateralDamagePotentialType",
              },
            "targetDistribution":
              {
                "$ref": "https://www.first.org/cvss/cvss-v2.0.json?20170531#/definitions/targetDistributionType",
              },
            "confidentialityRequirement":
              {
                "$ref": "https://www.first.org/cvss/cvss-v2.0.json?20170531#/definitions/ciaRequirementType",
              },
            "integrityRequirement": *cvss20ciaRequirementType, # workaround for openapi-typescript-codegen
            "availabilityRequirement": *cvss20ciaRequirementType, # workaround for openapi-typescript-codegen
            "environmentalScore": *cvss20scoreType, # workaround for openapi-typescript-codegen
          },
        "required": ["version", "vectorString", "baseScore"],
      }
