import React from "react";

import {
  TableHead,
  TableRow,
  TableCell,
  Collapse,
  Table,
  Box,
  TableBody,
  Typography,
  IconButton,
} from "@mui/material";

import {styled} from "@mui/system";
import CveSeverityTableCell from "./cve-severity-table-cell";
import {sortBy} from "lodash";
import {Check, KeyboardArrowRight} from "@mui/icons-material";

const Row = styled(TableRow)(({theme: {palette}}) => ({
  paddingBottom: 0,
  paddingTop: 0,
  background: palette.background.default,
}));

const cveURL = new URL("https://nvd.nist.gov/vuln/detail/");

export default function CveTable({open, cves, extraContent}: CveTableProps) {
  let content = (
    <Typography>This component has no known vulnerabilities</Typography>
  );

  if (cves.length) {
    const orderedList = sortBy(cves, ({baseScore}) => -baseScore);
    const filteredOrderedList = orderedList.filter(
      (item) =>
        item &&
        item.id &&
        item.description &&
        item.cwes &&
        item.baseScore &&
        item.baseSeverity,
    );
    content = (
      <Table>
        <TableHead>
          <TableRow>
            {[
              "Severity",
              "Severity score",
              "Common weakness enumeration",
              "Mitigated under a memory safe system",
              "Description",
              "More info at NVD",
            ].map((columnName) => (
              <TableCell key={columnName}>{columnName}</TableCell>
            ))}
          </TableRow>
        </TableHead>
        <TableBody>
          {filteredOrderedList.map(
            ({id, description, cwes, baseScore, baseSeverity}) => {
              const memorySafe = !!cwes.find(({memoryCwe}) => memoryCwe);
              return (
                <TableRow
                  className={memorySafe ? "memory-safe-row" : undefined}
                  key={id}
                >
                  <CveSeverityTableCell severity={baseSeverity} />
                  <TableCell>{baseScore}</TableCell>
                  <TableCell>{cwes.map(({name}) => name).join(", ")}</TableCell>
                  <TableCell>{memorySafe ? <Check /> : null}</TableCell>
                  <TableCell>{description}</TableCell>
                  <TableCell>
                    {id && (
                      <IconButton
                        href={new URL(id, cveURL).href}
                        rel="noopener"
                        target="_blank"
                        aria-label="View this CVE on the National Vulnerability Database, which opens in a new tab."
                      >
                        <KeyboardArrowRight />
                      </IconButton>
                    )}
                  </TableCell>
                </TableRow>
              );
            },
          )}
        </TableBody>
      </Table>
    );
  }
  return (
    <Row>
      <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={10}>
        <Collapse in={open} timeout="auto" unmountOnExit>
          <Box sx={{ margin: 1 }}>
            {content}
            {/* Directly following the existing content, render extraContent */}
            {extraContent}
          </Box>
        </Collapse>
      </TableCell>
    </Row>
  );
}

